# Generated by Django 5.1.7 on 2025-03-18 09:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('niveau', models.CharField(choices=[('L1', 'licence 1'), ('L2', 'licence 2'), ('L3', 'licence 3'), ('M1', 'master 1'), ('M2', 'master 2')], default='L1', max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='adresse email')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('PROFESSEUR', 'Professeur'), ('ETUDIANT', 'Étudiant')], default='ETUDIANT', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etudiants', to='core.classe')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='etudiant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intitule', models.CharField(max_length=100)),
                ('coefficient', models.DecimalField(decimal_places=2, max_digits=3)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matieres', to='core.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('sujet', models.TextField(blank=True)),
                ('fichier', models.FileField(upload_to='evaluations/')),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('text', 'Texte'), ('latex', 'LaTeX')], max_length=5)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_evaluation', models.DateTimeField(default=django.utils.timezone.now)),
                ('bareme_total', models.IntegerField(default=20)),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='core.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Professeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='professeur', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='matiere',
            name='professeur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matieres', to='core.professeur'),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('bareme', models.IntegerField()),
                ('reponse_ia', models.TextField(blank=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('PROFESSEUR', 'Professeur'), ('ETUDIANT', 'Étudiant')], max_length=10)),
                ('is_registered', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('classe', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registered_emails', to='core.classe')),
            ],
        ),
        migrations.CreateModel(
            name='ReponseEleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fichier', models.FileField(upload_to='reponses/')),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('text', 'Texte'), ('latex', 'LaTeX')], max_length=5)),
                ('date_soumission', models.DateTimeField(default=django.utils.timezone.now)),
                ('note', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('status', models.CharField(default='EN ATTENTE', max_length=10)),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='core.etudiant')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses_eleves', to='core.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='ReponseQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('note', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses_eleves', to='core.question')),
                ('reponse_eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses_questions', to='core.reponseeleve')),
            ],
        ),
    ]
